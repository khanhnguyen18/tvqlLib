//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Quanlythuvien {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dtSach : DataSet {
        
        private QUYENSACHDataTable tableQUYENSACH;
        
        public dtSach() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dtSach(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["QUYENSACH"] != null)) {
                    this.Tables.Add(new QUYENSACHDataTable(ds.Tables["QUYENSACH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUYENSACHDataTable QUYENSACH {
            get {
                return this.tableQUYENSACH;
            }
        }
        
        public override DataSet Clone() {
            dtSach cln = ((dtSach)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["QUYENSACH"] != null)) {
                this.Tables.Add(new QUYENSACHDataTable(ds.Tables["QUYENSACH"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableQUYENSACH = ((QUYENSACHDataTable)(this.Tables["QUYENSACH"]));
            if ((this.tableQUYENSACH != null)) {
                this.tableQUYENSACH.InitVars();
            }
        }
        
        private void InitClass() {
            this.DataSetName = "dtSach";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtSach.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableQUYENSACH = new QUYENSACHDataTable();
            this.Tables.Add(this.tableQUYENSACH);
        }
        
        private bool ShouldSerializeQUYENSACH() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void QUYENSACHRowChangeEventHandler(object sender, QUYENSACHRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class QUYENSACHDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMSSACH;
            
            private DataColumn columnTENSACH;
            
            private DataColumn columnTACGIA;
            
            private DataColumn columnMSNHAXB;
            
            private DataColumn columnMALOAISACH;
            
            private DataColumn columnNAMXB;
            
            private DataColumn columnLANXB;
            
            private DataColumn columnSOLUONG;
            
            private DataColumn columnNOIDUNGTOMLUOC;
            
            internal QUYENSACHDataTable() : 
                    base("QUYENSACH") {
                this.InitClass();
            }
            
            internal QUYENSACHDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MSSACHColumn {
                get {
                    return this.columnMSSACH;
                }
            }
            
            internal DataColumn TENSACHColumn {
                get {
                    return this.columnTENSACH;
                }
            }
            
            internal DataColumn TACGIAColumn {
                get {
                    return this.columnTACGIA;
                }
            }
            
            internal DataColumn MSNHAXBColumn {
                get {
                    return this.columnMSNHAXB;
                }
            }
            
            internal DataColumn MALOAISACHColumn {
                get {
                    return this.columnMALOAISACH;
                }
            }
            
            internal DataColumn NAMXBColumn {
                get {
                    return this.columnNAMXB;
                }
            }
            
            internal DataColumn LANXBColumn {
                get {
                    return this.columnLANXB;
                }
            }
            
            internal DataColumn SOLUONGColumn {
                get {
                    return this.columnSOLUONG;
                }
            }
            
            internal DataColumn NOIDUNGTOMLUOCColumn {
                get {
                    return this.columnNOIDUNGTOMLUOC;
                }
            }
            
            public QUYENSACHRow this[int index] {
                get {
                    return ((QUYENSACHRow)(this.Rows[index]));
                }
            }
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowChanged;
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowChanging;
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowDeleted;
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowDeleting;
            
            public void AddQUYENSACHRow(QUYENSACHRow row) {
                this.Rows.Add(row);
            }
            
            public QUYENSACHRow AddQUYENSACHRow(string MSSACH, string TENSACH, string TACGIA, string MSNHAXB, string MALOAISACH, string NAMXB, string LANXB, int SOLUONG, string NOIDUNGTOMLUOC) {
                QUYENSACHRow rowQUYENSACHRow = ((QUYENSACHRow)(this.NewRow()));
                rowQUYENSACHRow.ItemArray = new object[] {
                        MSSACH,
                        TENSACH,
                        TACGIA,
                        MSNHAXB,
                        MALOAISACH,
                        NAMXB,
                        LANXB,
                        SOLUONG,
                        NOIDUNGTOMLUOC};
                this.Rows.Add(rowQUYENSACHRow);
                return rowQUYENSACHRow;
            }
            
            public QUYENSACHRow FindByMSSACH(string MSSACH) {
                return ((QUYENSACHRow)(this.Rows.Find(new object[] {
                            MSSACH})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                QUYENSACHDataTable cln = ((QUYENSACHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new QUYENSACHDataTable();
            }
            
            internal void InitVars() {
                this.columnMSSACH = this.Columns["MSSACH"];
                this.columnTENSACH = this.Columns["TENSACH"];
                this.columnTACGIA = this.Columns["TACGIA"];
                this.columnMSNHAXB = this.Columns["MSNHAXB"];
                this.columnMALOAISACH = this.Columns["MALOAISACH"];
                this.columnNAMXB = this.Columns["NAMXB"];
                this.columnLANXB = this.Columns["LANXB"];
                this.columnSOLUONG = this.Columns["SOLUONG"];
                this.columnNOIDUNGTOMLUOC = this.Columns["NOIDUNGTOMLUOC"];
            }
            
            private void InitClass() {
                this.columnMSSACH = new DataColumn("MSSACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSSACH);
                this.columnTENSACH = new DataColumn("TENSACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTENSACH);
                this.columnTACGIA = new DataColumn("TACGIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTACGIA);
                this.columnMSNHAXB = new DataColumn("MSNHAXB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSNHAXB);
                this.columnMALOAISACH = new DataColumn("MALOAISACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMALOAISACH);
                this.columnNAMXB = new DataColumn("NAMXB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAMXB);
                this.columnLANXB = new DataColumn("LANXB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLANXB);
                this.columnSOLUONG = new DataColumn("SOLUONG", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOLUONG);
                this.columnNOIDUNGTOMLUOC = new DataColumn("NOIDUNGTOMLUOC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOIDUNGTOMLUOC);
                this.Constraints.Add(new UniqueConstraint("dtSachKey1", new DataColumn[] {
                                this.columnMSSACH}, true));
                this.columnMSSACH.AllowDBNull = false;
                this.columnMSSACH.Unique = true;
            }
            
            public QUYENSACHRow NewQUYENSACHRow() {
                return ((QUYENSACHRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new QUYENSACHRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(QUYENSACHRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUYENSACHRowChanged != null)) {
                    this.QUYENSACHRowChanged(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUYENSACHRowChanging != null)) {
                    this.QUYENSACHRowChanging(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUYENSACHRowDeleted != null)) {
                    this.QUYENSACHRowDeleted(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUYENSACHRowDeleting != null)) {
                    this.QUYENSACHRowDeleting(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveQUYENSACHRow(QUYENSACHRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class QUYENSACHRow : DataRow {
            
            private QUYENSACHDataTable tableQUYENSACH;
            
            internal QUYENSACHRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUYENSACH = ((QUYENSACHDataTable)(this.Table));
            }
            
            public string MSSACH {
                get {
                    return ((string)(this[this.tableQUYENSACH.MSSACHColumn]));
                }
                set {
                    this[this.tableQUYENSACH.MSSACHColumn] = value;
                }
            }
            
            public string TENSACH {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.TENSACHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.TENSACHColumn] = value;
                }
            }
            
            public string TACGIA {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.TACGIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.TACGIAColumn] = value;
                }
            }
            
            public string MSNHAXB {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.MSNHAXBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.MSNHAXBColumn] = value;
                }
            }
            
            public string MALOAISACH {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.MALOAISACHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.MALOAISACHColumn] = value;
                }
            }
            
            public string NAMXB {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.NAMXBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.NAMXBColumn] = value;
                }
            }
            
            public string LANXB {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.LANXBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.LANXBColumn] = value;
                }
            }
            
            public int SOLUONG {
                get {
                    try {
                        return ((int)(this[this.tableQUYENSACH.SOLUONGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.SOLUONGColumn] = value;
                }
            }
            
            public string NOIDUNGTOMLUOC {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.NOIDUNGTOMLUOCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.NOIDUNGTOMLUOCColumn] = value;
                }
            }
            
            public bool IsTENSACHNull() {
                return this.IsNull(this.tableQUYENSACH.TENSACHColumn);
            }
            
            public void SetTENSACHNull() {
                this[this.tableQUYENSACH.TENSACHColumn] = System.Convert.DBNull;
            }
            
            public bool IsTACGIANull() {
                return this.IsNull(this.tableQUYENSACH.TACGIAColumn);
            }
            
            public void SetTACGIANull() {
                this[this.tableQUYENSACH.TACGIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsMSNHAXBNull() {
                return this.IsNull(this.tableQUYENSACH.MSNHAXBColumn);
            }
            
            public void SetMSNHAXBNull() {
                this[this.tableQUYENSACH.MSNHAXBColumn] = System.Convert.DBNull;
            }
            
            public bool IsMALOAISACHNull() {
                return this.IsNull(this.tableQUYENSACH.MALOAISACHColumn);
            }
            
            public void SetMALOAISACHNull() {
                this[this.tableQUYENSACH.MALOAISACHColumn] = System.Convert.DBNull;
            }
            
            public bool IsNAMXBNull() {
                return this.IsNull(this.tableQUYENSACH.NAMXBColumn);
            }
            
            public void SetNAMXBNull() {
                this[this.tableQUYENSACH.NAMXBColumn] = System.Convert.DBNull;
            }
            
            public bool IsLANXBNull() {
                return this.IsNull(this.tableQUYENSACH.LANXBColumn);
            }
            
            public void SetLANXBNull() {
                this[this.tableQUYENSACH.LANXBColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOLUONGNull() {
                return this.IsNull(this.tableQUYENSACH.SOLUONGColumn);
            }
            
            public void SetSOLUONGNull() {
                this[this.tableQUYENSACH.SOLUONGColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOIDUNGTOMLUOCNull() {
                return this.IsNull(this.tableQUYENSACH.NOIDUNGTOMLUOCColumn);
            }
            
            public void SetNOIDUNGTOMLUOCNull() {
                this[this.tableQUYENSACH.NOIDUNGTOMLUOCColumn] = System.Convert.DBNull;
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class QUYENSACHRowChangeEvent : EventArgs {
            
            private QUYENSACHRow eventRow;
            
            private DataRowAction eventAction;
            
            public QUYENSACHRowChangeEvent(QUYENSACHRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public QUYENSACHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
