//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a tool.
//     Runtime Version: 1.1.4322.573
//
//     Changes to this file may cause incorrect behavior and will be lost if 
//     the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------

namespace Quanlythuvien {
    using System;
    using System.Data;
    using System.Xml;
    using System.Runtime.Serialization;
    
    
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Diagnostics.DebuggerStepThrough()]
    [System.ComponentModel.ToolboxItem(true)]
    public class dtMuonSach : DataSet {
        
        private MUONSACHDataTable tableMUONSACH;
        
        private CHITIETPHIEUMUONDataTable tableCHITIETPHIEUMUON;
        
        private DOCGIADataTable tableDOCGIA;
        
        private QUYENSACHDataTable tableQUYENSACH;
        
        private DataRelation relationMUONSACHCHITIETPHIEUMUON;
        
        private DataRelation relationDOCGIAMUONSACH;
        
        private DataRelation relationQUYENSACHCHITIETPHIEUMUON;
        
        public dtMuonSach() {
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        protected dtMuonSach(SerializationInfo info, StreamingContext context) {
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((strSchema != null)) {
                DataSet ds = new DataSet();
                ds.ReadXmlSchema(new XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["MUONSACH"] != null)) {
                    this.Tables.Add(new MUONSACHDataTable(ds.Tables["MUONSACH"]));
                }
                if ((ds.Tables["CHITIETPHIEUMUON"] != null)) {
                    this.Tables.Add(new CHITIETPHIEUMUONDataTable(ds.Tables["CHITIETPHIEUMUON"]));
                }
                if ((ds.Tables["DOCGIA"] != null)) {
                    this.Tables.Add(new DOCGIADataTable(ds.Tables["DOCGIA"]));
                }
                if ((ds.Tables["QUYENSACH"] != null)) {
                    this.Tables.Add(new QUYENSACHDataTable(ds.Tables["QUYENSACH"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.InitClass();
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            this.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public MUONSACHDataTable MUONSACH {
            get {
                return this.tableMUONSACH;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CHITIETPHIEUMUONDataTable CHITIETPHIEUMUON {
            get {
                return this.tableCHITIETPHIEUMUON;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public DOCGIADataTable DOCGIA {
            get {
                return this.tableDOCGIA;
            }
        }
        
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public QUYENSACHDataTable QUYENSACH {
            get {
                return this.tableQUYENSACH;
            }
        }
        
        public override DataSet Clone() {
            dtMuonSach cln = ((dtMuonSach)(base.Clone()));
            cln.InitVars();
            return cln;
        }
        
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        protected override void ReadXmlSerializable(XmlReader reader) {
            this.Reset();
            DataSet ds = new DataSet();
            ds.ReadXml(reader);
            if ((ds.Tables["MUONSACH"] != null)) {
                this.Tables.Add(new MUONSACHDataTable(ds.Tables["MUONSACH"]));
            }
            if ((ds.Tables["CHITIETPHIEUMUON"] != null)) {
                this.Tables.Add(new CHITIETPHIEUMUONDataTable(ds.Tables["CHITIETPHIEUMUON"]));
            }
            if ((ds.Tables["DOCGIA"] != null)) {
                this.Tables.Add(new DOCGIADataTable(ds.Tables["DOCGIA"]));
            }
            if ((ds.Tables["QUYENSACH"] != null)) {
                this.Tables.Add(new QUYENSACHDataTable(ds.Tables["QUYENSACH"]));
            }
            this.DataSetName = ds.DataSetName;
            this.Prefix = ds.Prefix;
            this.Namespace = ds.Namespace;
            this.Locale = ds.Locale;
            this.CaseSensitive = ds.CaseSensitive;
            this.EnforceConstraints = ds.EnforceConstraints;
            this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
            this.InitVars();
        }
        
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new XmlTextReader(stream), null);
        }
        
        internal void InitVars() {
            this.tableMUONSACH = ((MUONSACHDataTable)(this.Tables["MUONSACH"]));
            if ((this.tableMUONSACH != null)) {
                this.tableMUONSACH.InitVars();
            }
            this.tableCHITIETPHIEUMUON = ((CHITIETPHIEUMUONDataTable)(this.Tables["CHITIETPHIEUMUON"]));
            if ((this.tableCHITIETPHIEUMUON != null)) {
                this.tableCHITIETPHIEUMUON.InitVars();
            }
            this.tableDOCGIA = ((DOCGIADataTable)(this.Tables["DOCGIA"]));
            if ((this.tableDOCGIA != null)) {
                this.tableDOCGIA.InitVars();
            }
            this.tableQUYENSACH = ((QUYENSACHDataTable)(this.Tables["QUYENSACH"]));
            if ((this.tableQUYENSACH != null)) {
                this.tableQUYENSACH.InitVars();
            }
            this.relationMUONSACHCHITIETPHIEUMUON = this.Relations["MUONSACHCHITIETPHIEUMUON"];
            this.relationDOCGIAMUONSACH = this.Relations["DOCGIAMUONSACH"];
            this.relationQUYENSACHCHITIETPHIEUMUON = this.Relations["QUYENSACHCHITIETPHIEUMUON"];
        }
        
        private void InitClass() {
            this.DataSetName = "dtMuonSach";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/dtMuonSach.xsd";
            this.Locale = new System.Globalization.CultureInfo("en-US");
            this.CaseSensitive = false;
            this.EnforceConstraints = true;
            this.tableMUONSACH = new MUONSACHDataTable();
            this.Tables.Add(this.tableMUONSACH);
            this.tableCHITIETPHIEUMUON = new CHITIETPHIEUMUONDataTable();
            this.Tables.Add(this.tableCHITIETPHIEUMUON);
            this.tableDOCGIA = new DOCGIADataTable();
            this.Tables.Add(this.tableDOCGIA);
            this.tableQUYENSACH = new QUYENSACHDataTable();
            this.Tables.Add(this.tableQUYENSACH);
            ForeignKeyConstraint fkc;
            fkc = new ForeignKeyConstraint("DOCGIAMUONSACH", new DataColumn[] {
                        this.tableDOCGIA.MSDGColumn}, new DataColumn[] {
                        this.tableMUONSACH.MSDGColumn});
            this.tableMUONSACH.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("MUONSACHCHITIETPHIEUMUON", new DataColumn[] {
                        this.tableMUONSACH.SOPHIEUMUONColumn}, new DataColumn[] {
                        this.tableCHITIETPHIEUMUON.SOPHIEUMUONColumn});
            this.tableCHITIETPHIEUMUON.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            fkc = new ForeignKeyConstraint("QUYENSACHCHITIETPHIEUMUON", new DataColumn[] {
                        this.tableQUYENSACH.MSSACHColumn}, new DataColumn[] {
                        this.tableCHITIETPHIEUMUON.MSSACHColumn});
            this.tableCHITIETPHIEUMUON.Constraints.Add(fkc);
            fkc.AcceptRejectRule = System.Data.AcceptRejectRule.None;
            fkc.DeleteRule = System.Data.Rule.Cascade;
            fkc.UpdateRule = System.Data.Rule.Cascade;
            this.relationMUONSACHCHITIETPHIEUMUON = new DataRelation("MUONSACHCHITIETPHIEUMUON", new DataColumn[] {
                        this.tableMUONSACH.SOPHIEUMUONColumn}, new DataColumn[] {
                        this.tableCHITIETPHIEUMUON.SOPHIEUMUONColumn}, false);
            this.Relations.Add(this.relationMUONSACHCHITIETPHIEUMUON);
            this.relationDOCGIAMUONSACH = new DataRelation("DOCGIAMUONSACH", new DataColumn[] {
                        this.tableDOCGIA.MSDGColumn}, new DataColumn[] {
                        this.tableMUONSACH.MSDGColumn}, false);
            this.Relations.Add(this.relationDOCGIAMUONSACH);
            this.relationQUYENSACHCHITIETPHIEUMUON = new DataRelation("QUYENSACHCHITIETPHIEUMUON", new DataColumn[] {
                        this.tableQUYENSACH.MSSACHColumn}, new DataColumn[] {
                        this.tableCHITIETPHIEUMUON.MSSACHColumn}, false);
            this.Relations.Add(this.relationQUYENSACHCHITIETPHIEUMUON);
        }
        
        private bool ShouldSerializeMUONSACH() {
            return false;
        }
        
        private bool ShouldSerializeCHITIETPHIEUMUON() {
            return false;
        }
        
        private bool ShouldSerializeDOCGIA() {
            return false;
        }
        
        private bool ShouldSerializeQUYENSACH() {
            return false;
        }
        
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        public delegate void MUONSACHRowChangeEventHandler(object sender, MUONSACHRowChangeEvent e);
        
        public delegate void CHITIETPHIEUMUONRowChangeEventHandler(object sender, CHITIETPHIEUMUONRowChangeEvent e);
        
        public delegate void DOCGIARowChangeEventHandler(object sender, DOCGIARowChangeEvent e);
        
        public delegate void QUYENSACHRowChangeEventHandler(object sender, QUYENSACHRowChangeEvent e);
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MUONSACHDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSOPHIEUMUON;
            
            private DataColumn columnMSDG;
            
            private DataColumn columnMSNV;
            
            private DataColumn columnNGAYMUON;
            
            internal MUONSACHDataTable() : 
                    base("MUONSACH") {
                this.InitClass();
            }
            
            internal MUONSACHDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SOPHIEUMUONColumn {
                get {
                    return this.columnSOPHIEUMUON;
                }
            }
            
            internal DataColumn MSDGColumn {
                get {
                    return this.columnMSDG;
                }
            }
            
            internal DataColumn MSNVColumn {
                get {
                    return this.columnMSNV;
                }
            }
            
            internal DataColumn NGAYMUONColumn {
                get {
                    return this.columnNGAYMUON;
                }
            }
            
            public MUONSACHRow this[int index] {
                get {
                    return ((MUONSACHRow)(this.Rows[index]));
                }
            }
            
            public event MUONSACHRowChangeEventHandler MUONSACHRowChanged;
            
            public event MUONSACHRowChangeEventHandler MUONSACHRowChanging;
            
            public event MUONSACHRowChangeEventHandler MUONSACHRowDeleted;
            
            public event MUONSACHRowChangeEventHandler MUONSACHRowDeleting;
            
            public void AddMUONSACHRow(MUONSACHRow row) {
                this.Rows.Add(row);
            }
            
            public MUONSACHRow AddMUONSACHRow(System.Decimal SOPHIEUMUON, DOCGIARow parentDOCGIARowByDOCGIAMUONSACH, string MSNV, System.DateTime NGAYMUON) {
                MUONSACHRow rowMUONSACHRow = ((MUONSACHRow)(this.NewRow()));
                rowMUONSACHRow.ItemArray = new object[] {
                        SOPHIEUMUON,
                        parentDOCGIARowByDOCGIAMUONSACH[0],
                        MSNV,
                        NGAYMUON};
                this.Rows.Add(rowMUONSACHRow);
                return rowMUONSACHRow;
            }
            
            public MUONSACHRow FindBySOPHIEUMUON(System.Decimal SOPHIEUMUON) {
                return ((MUONSACHRow)(this.Rows.Find(new object[] {
                            SOPHIEUMUON})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                MUONSACHDataTable cln = ((MUONSACHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new MUONSACHDataTable();
            }
            
            internal void InitVars() {
                this.columnSOPHIEUMUON = this.Columns["SOPHIEUMUON"];
                this.columnMSDG = this.Columns["MSDG"];
                this.columnMSNV = this.Columns["MSNV"];
                this.columnNGAYMUON = this.Columns["NGAYMUON"];
            }
            
            private void InitClass() {
                this.columnSOPHIEUMUON = new DataColumn("SOPHIEUMUON", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPHIEUMUON);
                this.columnMSDG = new DataColumn("MSDG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSDG);
                this.columnMSNV = new DataColumn("MSNV", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSNV);
                this.columnNGAYMUON = new DataColumn("NGAYMUON", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNGAYMUON);
                this.Constraints.Add(new UniqueConstraint("dtMuonSachKey1", new DataColumn[] {
                                this.columnSOPHIEUMUON}, true));
                this.columnSOPHIEUMUON.AllowDBNull = false;
                this.columnSOPHIEUMUON.Unique = true;
                this.columnMSDG.AllowDBNull = false;
                this.columnNGAYMUON.AllowDBNull = false;
            }
            
            public MUONSACHRow NewMUONSACHRow() {
                return ((MUONSACHRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new MUONSACHRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(MUONSACHRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.MUONSACHRowChanged != null)) {
                    this.MUONSACHRowChanged(this, new MUONSACHRowChangeEvent(((MUONSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.MUONSACHRowChanging != null)) {
                    this.MUONSACHRowChanging(this, new MUONSACHRowChangeEvent(((MUONSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.MUONSACHRowDeleted != null)) {
                    this.MUONSACHRowDeleted(this, new MUONSACHRowChangeEvent(((MUONSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.MUONSACHRowDeleting != null)) {
                    this.MUONSACHRowDeleting(this, new MUONSACHRowChangeEvent(((MUONSACHRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveMUONSACHRow(MUONSACHRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MUONSACHRow : DataRow {
            
            private MUONSACHDataTable tableMUONSACH;
            
            internal MUONSACHRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableMUONSACH = ((MUONSACHDataTable)(this.Table));
            }
            
            public System.Decimal SOPHIEUMUON {
                get {
                    return ((System.Decimal)(this[this.tableMUONSACH.SOPHIEUMUONColumn]));
                }
                set {
                    this[this.tableMUONSACH.SOPHIEUMUONColumn] = value;
                }
            }
            
            public string MSDG {
                get {
                    return ((string)(this[this.tableMUONSACH.MSDGColumn]));
                }
                set {
                    this[this.tableMUONSACH.MSDGColumn] = value;
                }
            }
            
            public string MSNV {
                get {
                    try {
                        return ((string)(this[this.tableMUONSACH.MSNVColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableMUONSACH.MSNVColumn] = value;
                }
            }
            
            public System.DateTime NGAYMUON {
                get {
                    return ((System.DateTime)(this[this.tableMUONSACH.NGAYMUONColumn]));
                }
                set {
                    this[this.tableMUONSACH.NGAYMUONColumn] = value;
                }
            }
            
            public DOCGIARow DOCGIARow {
                get {
                    return ((DOCGIARow)(this.GetParentRow(this.Table.ParentRelations["DOCGIAMUONSACH"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["DOCGIAMUONSACH"]);
                }
            }
            
            public bool IsMSNVNull() {
                return this.IsNull(this.tableMUONSACH.MSNVColumn);
            }
            
            public void SetMSNVNull() {
                this[this.tableMUONSACH.MSNVColumn] = System.Convert.DBNull;
            }
            
            public CHITIETPHIEUMUONRow[] GetCHITIETPHIEUMUONRows() {
                return ((CHITIETPHIEUMUONRow[])(this.GetChildRows(this.Table.ChildRelations["MUONSACHCHITIETPHIEUMUON"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class MUONSACHRowChangeEvent : EventArgs {
            
            private MUONSACHRow eventRow;
            
            private DataRowAction eventAction;
            
            public MUONSACHRowChangeEvent(MUONSACHRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public MUONSACHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CHITIETPHIEUMUONDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnSOPHIEUMUON;
            
            private DataColumn columnMSSACH;
            
            private DataColumn columnHANTRA;
            
            internal CHITIETPHIEUMUONDataTable() : 
                    base("CHITIETPHIEUMUON") {
                this.InitClass();
            }
            
            internal CHITIETPHIEUMUONDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn SOPHIEUMUONColumn {
                get {
                    return this.columnSOPHIEUMUON;
                }
            }
            
            internal DataColumn MSSACHColumn {
                get {
                    return this.columnMSSACH;
                }
            }
            
            internal DataColumn HANTRAColumn {
                get {
                    return this.columnHANTRA;
                }
            }
            
            public CHITIETPHIEUMUONRow this[int index] {
                get {
                    return ((CHITIETPHIEUMUONRow)(this.Rows[index]));
                }
            }
            
            public event CHITIETPHIEUMUONRowChangeEventHandler CHITIETPHIEUMUONRowChanged;
            
            public event CHITIETPHIEUMUONRowChangeEventHandler CHITIETPHIEUMUONRowChanging;
            
            public event CHITIETPHIEUMUONRowChangeEventHandler CHITIETPHIEUMUONRowDeleted;
            
            public event CHITIETPHIEUMUONRowChangeEventHandler CHITIETPHIEUMUONRowDeleting;
            
            public void AddCHITIETPHIEUMUONRow(CHITIETPHIEUMUONRow row) {
                this.Rows.Add(row);
            }
            
            public CHITIETPHIEUMUONRow AddCHITIETPHIEUMUONRow(MUONSACHRow parentMUONSACHRowByMUONSACHCHITIETPHIEUMUON, QUYENSACHRow parentQUYENSACHRowByQUYENSACHCHITIETPHIEUMUON, System.DateTime HANTRA) {
                CHITIETPHIEUMUONRow rowCHITIETPHIEUMUONRow = ((CHITIETPHIEUMUONRow)(this.NewRow()));
                rowCHITIETPHIEUMUONRow.ItemArray = new object[] {
                        parentMUONSACHRowByMUONSACHCHITIETPHIEUMUON[0],
                        parentQUYENSACHRowByQUYENSACHCHITIETPHIEUMUON[0],
                        HANTRA};
                this.Rows.Add(rowCHITIETPHIEUMUONRow);
                return rowCHITIETPHIEUMUONRow;
            }
            
            public CHITIETPHIEUMUONRow FindBySOPHIEUMUONMSSACH(System.Decimal SOPHIEUMUON, string MSSACH) {
                return ((CHITIETPHIEUMUONRow)(this.Rows.Find(new object[] {
                            SOPHIEUMUON,
                            MSSACH})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                CHITIETPHIEUMUONDataTable cln = ((CHITIETPHIEUMUONDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new CHITIETPHIEUMUONDataTable();
            }
            
            internal void InitVars() {
                this.columnSOPHIEUMUON = this.Columns["SOPHIEUMUON"];
                this.columnMSSACH = this.Columns["MSSACH"];
                this.columnHANTRA = this.Columns["HANTRA"];
            }
            
            private void InitClass() {
                this.columnSOPHIEUMUON = new DataColumn("SOPHIEUMUON", typeof(System.Decimal), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOPHIEUMUON);
                this.columnMSSACH = new DataColumn("MSSACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSSACH);
                this.columnHANTRA = new DataColumn("HANTRA", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHANTRA);
                this.Constraints.Add(new UniqueConstraint("dtMuonSachKey2", new DataColumn[] {
                                this.columnSOPHIEUMUON,
                                this.columnMSSACH}, true));
                this.columnSOPHIEUMUON.AllowDBNull = false;
                this.columnMSSACH.AllowDBNull = false;
                this.columnHANTRA.AllowDBNull = false;
            }
            
            public CHITIETPHIEUMUONRow NewCHITIETPHIEUMUONRow() {
                return ((CHITIETPHIEUMUONRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new CHITIETPHIEUMUONRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(CHITIETPHIEUMUONRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CHITIETPHIEUMUONRowChanged != null)) {
                    this.CHITIETPHIEUMUONRowChanged(this, new CHITIETPHIEUMUONRowChangeEvent(((CHITIETPHIEUMUONRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CHITIETPHIEUMUONRowChanging != null)) {
                    this.CHITIETPHIEUMUONRowChanging(this, new CHITIETPHIEUMUONRowChangeEvent(((CHITIETPHIEUMUONRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CHITIETPHIEUMUONRowDeleted != null)) {
                    this.CHITIETPHIEUMUONRowDeleted(this, new CHITIETPHIEUMUONRowChangeEvent(((CHITIETPHIEUMUONRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CHITIETPHIEUMUONRowDeleting != null)) {
                    this.CHITIETPHIEUMUONRowDeleting(this, new CHITIETPHIEUMUONRowChangeEvent(((CHITIETPHIEUMUONRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveCHITIETPHIEUMUONRow(CHITIETPHIEUMUONRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CHITIETPHIEUMUONRow : DataRow {
            
            private CHITIETPHIEUMUONDataTable tableCHITIETPHIEUMUON;
            
            internal CHITIETPHIEUMUONRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableCHITIETPHIEUMUON = ((CHITIETPHIEUMUONDataTable)(this.Table));
            }
            
            public System.Decimal SOPHIEUMUON {
                get {
                    return ((System.Decimal)(this[this.tableCHITIETPHIEUMUON.SOPHIEUMUONColumn]));
                }
                set {
                    this[this.tableCHITIETPHIEUMUON.SOPHIEUMUONColumn] = value;
                }
            }
            
            public string MSSACH {
                get {
                    return ((string)(this[this.tableCHITIETPHIEUMUON.MSSACHColumn]));
                }
                set {
                    this[this.tableCHITIETPHIEUMUON.MSSACHColumn] = value;
                }
            }
            
            public System.DateTime HANTRA {
                get {
                    return ((System.DateTime)(this[this.tableCHITIETPHIEUMUON.HANTRAColumn]));
                }
                set {
                    this[this.tableCHITIETPHIEUMUON.HANTRAColumn] = value;
                }
            }
            
            public MUONSACHRow MUONSACHRow {
                get {
                    return ((MUONSACHRow)(this.GetParentRow(this.Table.ParentRelations["MUONSACHCHITIETPHIEUMUON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["MUONSACHCHITIETPHIEUMUON"]);
                }
            }
            
            public QUYENSACHRow QUYENSACHRow {
                get {
                    return ((QUYENSACHRow)(this.GetParentRow(this.Table.ParentRelations["QUYENSACHCHITIETPHIEUMUON"])));
                }
                set {
                    this.SetParentRow(value, this.Table.ParentRelations["QUYENSACHCHITIETPHIEUMUON"]);
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class CHITIETPHIEUMUONRowChangeEvent : EventArgs {
            
            private CHITIETPHIEUMUONRow eventRow;
            
            private DataRowAction eventAction;
            
            public CHITIETPHIEUMUONRowChangeEvent(CHITIETPHIEUMUONRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public CHITIETPHIEUMUONRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DOCGIADataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMSDG;
            
            private DataColumn columnTENDG;
            
            private DataColumn columnDIACHI;
            
            private DataColumn columnNGAYSINH;
            
            private DataColumn columnEMAIL;
            
            private DataColumn columnGIOITINH;
            
            private DataColumn columnTHONGTINKHAC;
            
            private DataColumn columnHINHANHDG;
            
            internal DOCGIADataTable() : 
                    base("DOCGIA") {
                this.InitClass();
            }
            
            internal DOCGIADataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MSDGColumn {
                get {
                    return this.columnMSDG;
                }
            }
            
            internal DataColumn TENDGColumn {
                get {
                    return this.columnTENDG;
                }
            }
            
            internal DataColumn DIACHIColumn {
                get {
                    return this.columnDIACHI;
                }
            }
            
            internal DataColumn NGAYSINHColumn {
                get {
                    return this.columnNGAYSINH;
                }
            }
            
            internal DataColumn EMAILColumn {
                get {
                    return this.columnEMAIL;
                }
            }
            
            internal DataColumn GIOITINHColumn {
                get {
                    return this.columnGIOITINH;
                }
            }
            
            internal DataColumn THONGTINKHACColumn {
                get {
                    return this.columnTHONGTINKHAC;
                }
            }
            
            internal DataColumn HINHANHDGColumn {
                get {
                    return this.columnHINHANHDG;
                }
            }
            
            public DOCGIARow this[int index] {
                get {
                    return ((DOCGIARow)(this.Rows[index]));
                }
            }
            
            public event DOCGIARowChangeEventHandler DOCGIARowChanged;
            
            public event DOCGIARowChangeEventHandler DOCGIARowChanging;
            
            public event DOCGIARowChangeEventHandler DOCGIARowDeleted;
            
            public event DOCGIARowChangeEventHandler DOCGIARowDeleting;
            
            public void AddDOCGIARow(DOCGIARow row) {
                this.Rows.Add(row);
            }
            
            public DOCGIARow AddDOCGIARow(string MSDG, string TENDG, string DIACHI, System.DateTime NGAYSINH, string EMAIL, string GIOITINH, string THONGTINKHAC, string HINHANHDG) {
                DOCGIARow rowDOCGIARow = ((DOCGIARow)(this.NewRow()));
                rowDOCGIARow.ItemArray = new object[] {
                        MSDG,
                        TENDG,
                        DIACHI,
                        NGAYSINH,
                        EMAIL,
                        GIOITINH,
                        THONGTINKHAC,
                        HINHANHDG};
                this.Rows.Add(rowDOCGIARow);
                return rowDOCGIARow;
            }
            
            public DOCGIARow FindByMSDG(string MSDG) {
                return ((DOCGIARow)(this.Rows.Find(new object[] {
                            MSDG})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                DOCGIADataTable cln = ((DOCGIADataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new DOCGIADataTable();
            }
            
            internal void InitVars() {
                this.columnMSDG = this.Columns["MSDG"];
                this.columnTENDG = this.Columns["TENDG"];
                this.columnDIACHI = this.Columns["DIACHI"];
                this.columnNGAYSINH = this.Columns["NGAYSINH"];
                this.columnEMAIL = this.Columns["EMAIL"];
                this.columnGIOITINH = this.Columns["GIOITINH"];
                this.columnTHONGTINKHAC = this.Columns["THONGTINKHAC"];
                this.columnHINHANHDG = this.Columns["HINHANHDG"];
            }
            
            private void InitClass() {
                this.columnMSDG = new DataColumn("MSDG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSDG);
                this.columnTENDG = new DataColumn("TENDG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTENDG);
                this.columnDIACHI = new DataColumn("DIACHI", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnDIACHI);
                this.columnNGAYSINH = new DataColumn("NGAYSINH", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNGAYSINH);
                this.columnEMAIL = new DataColumn("EMAIL", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnEMAIL);
                this.columnGIOITINH = new DataColumn("GIOITINH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnGIOITINH);
                this.columnTHONGTINKHAC = new DataColumn("THONGTINKHAC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTHONGTINKHAC);
                this.columnHINHANHDG = new DataColumn("HINHANHDG", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnHINHANHDG);
                this.Constraints.Add(new UniqueConstraint("dtMuonSachKey3", new DataColumn[] {
                                this.columnMSDG}, true));
                this.columnMSDG.AllowDBNull = false;
                this.columnMSDG.Unique = true;
                this.columnTENDG.AllowDBNull = false;
            }
            
            public DOCGIARow NewDOCGIARow() {
                return ((DOCGIARow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new DOCGIARow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(DOCGIARow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.DOCGIARowChanged != null)) {
                    this.DOCGIARowChanged(this, new DOCGIARowChangeEvent(((DOCGIARow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.DOCGIARowChanging != null)) {
                    this.DOCGIARowChanging(this, new DOCGIARowChangeEvent(((DOCGIARow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.DOCGIARowDeleted != null)) {
                    this.DOCGIARowDeleted(this, new DOCGIARowChangeEvent(((DOCGIARow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.DOCGIARowDeleting != null)) {
                    this.DOCGIARowDeleting(this, new DOCGIARowChangeEvent(((DOCGIARow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveDOCGIARow(DOCGIARow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DOCGIARow : DataRow {
            
            private DOCGIADataTable tableDOCGIA;
            
            internal DOCGIARow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableDOCGIA = ((DOCGIADataTable)(this.Table));
            }
            
            public string MSDG {
                get {
                    return ((string)(this[this.tableDOCGIA.MSDGColumn]));
                }
                set {
                    this[this.tableDOCGIA.MSDGColumn] = value;
                }
            }
            
            public string TENDG {
                get {
                    return ((string)(this[this.tableDOCGIA.TENDGColumn]));
                }
                set {
                    this[this.tableDOCGIA.TENDGColumn] = value;
                }
            }
            
            public string DIACHI {
                get {
                    try {
                        return ((string)(this[this.tableDOCGIA.DIACHIColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCGIA.DIACHIColumn] = value;
                }
            }
            
            public System.DateTime NGAYSINH {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableDOCGIA.NGAYSINHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCGIA.NGAYSINHColumn] = value;
                }
            }
            
            public string EMAIL {
                get {
                    try {
                        return ((string)(this[this.tableDOCGIA.EMAILColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCGIA.EMAILColumn] = value;
                }
            }
            
            public string GIOITINH {
                get {
                    try {
                        return ((string)(this[this.tableDOCGIA.GIOITINHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCGIA.GIOITINHColumn] = value;
                }
            }
            
            public string THONGTINKHAC {
                get {
                    try {
                        return ((string)(this[this.tableDOCGIA.THONGTINKHACColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCGIA.THONGTINKHACColumn] = value;
                }
            }
            
            public string HINHANHDG {
                get {
                    try {
                        return ((string)(this[this.tableDOCGIA.HINHANHDGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableDOCGIA.HINHANHDGColumn] = value;
                }
            }
            
            public bool IsDIACHINull() {
                return this.IsNull(this.tableDOCGIA.DIACHIColumn);
            }
            
            public void SetDIACHINull() {
                this[this.tableDOCGIA.DIACHIColumn] = System.Convert.DBNull;
            }
            
            public bool IsNGAYSINHNull() {
                return this.IsNull(this.tableDOCGIA.NGAYSINHColumn);
            }
            
            public void SetNGAYSINHNull() {
                this[this.tableDOCGIA.NGAYSINHColumn] = System.Convert.DBNull;
            }
            
            public bool IsEMAILNull() {
                return this.IsNull(this.tableDOCGIA.EMAILColumn);
            }
            
            public void SetEMAILNull() {
                this[this.tableDOCGIA.EMAILColumn] = System.Convert.DBNull;
            }
            
            public bool IsGIOITINHNull() {
                return this.IsNull(this.tableDOCGIA.GIOITINHColumn);
            }
            
            public void SetGIOITINHNull() {
                this[this.tableDOCGIA.GIOITINHColumn] = System.Convert.DBNull;
            }
            
            public bool IsTHONGTINKHACNull() {
                return this.IsNull(this.tableDOCGIA.THONGTINKHACColumn);
            }
            
            public void SetTHONGTINKHACNull() {
                this[this.tableDOCGIA.THONGTINKHACColumn] = System.Convert.DBNull;
            }
            
            public bool IsHINHANHDGNull() {
                return this.IsNull(this.tableDOCGIA.HINHANHDGColumn);
            }
            
            public void SetHINHANHDGNull() {
                this[this.tableDOCGIA.HINHANHDGColumn] = System.Convert.DBNull;
            }
            
            public MUONSACHRow[] GetMUONSACHRows() {
                return ((MUONSACHRow[])(this.GetChildRows(this.Table.ChildRelations["DOCGIAMUONSACH"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class DOCGIARowChangeEvent : EventArgs {
            
            private DOCGIARow eventRow;
            
            private DataRowAction eventAction;
            
            public DOCGIARowChangeEvent(DOCGIARow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public DOCGIARow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class QUYENSACHDataTable : DataTable, System.Collections.IEnumerable {
            
            private DataColumn columnMSSACH;
            
            private DataColumn columnTENSACH;
            
            private DataColumn columnTACGIA;
            
            private DataColumn columnMSNHAXB;
            
            private DataColumn columnMALOAISACH;
            
            private DataColumn columnNAMXB;
            
            private DataColumn columnLANXB;
            
            private DataColumn columnSOLUONG;
            
            private DataColumn columnNOIDUNGTOMLUOC;
            
            internal QUYENSACHDataTable() : 
                    base("QUYENSACH") {
                this.InitClass();
            }
            
            internal QUYENSACHDataTable(DataTable table) : 
                    base(table.TableName) {
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
                this.DisplayExpression = table.DisplayExpression;
            }
            
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            internal DataColumn MSSACHColumn {
                get {
                    return this.columnMSSACH;
                }
            }
            
            internal DataColumn TENSACHColumn {
                get {
                    return this.columnTENSACH;
                }
            }
            
            internal DataColumn TACGIAColumn {
                get {
                    return this.columnTACGIA;
                }
            }
            
            internal DataColumn MSNHAXBColumn {
                get {
                    return this.columnMSNHAXB;
                }
            }
            
            internal DataColumn MALOAISACHColumn {
                get {
                    return this.columnMALOAISACH;
                }
            }
            
            internal DataColumn NAMXBColumn {
                get {
                    return this.columnNAMXB;
                }
            }
            
            internal DataColumn LANXBColumn {
                get {
                    return this.columnLANXB;
                }
            }
            
            internal DataColumn SOLUONGColumn {
                get {
                    return this.columnSOLUONG;
                }
            }
            
            internal DataColumn NOIDUNGTOMLUOCColumn {
                get {
                    return this.columnNOIDUNGTOMLUOC;
                }
            }
            
            public QUYENSACHRow this[int index] {
                get {
                    return ((QUYENSACHRow)(this.Rows[index]));
                }
            }
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowChanged;
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowChanging;
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowDeleted;
            
            public event QUYENSACHRowChangeEventHandler QUYENSACHRowDeleting;
            
            public void AddQUYENSACHRow(QUYENSACHRow row) {
                this.Rows.Add(row);
            }
            
            public QUYENSACHRow AddQUYENSACHRow(string MSSACH, string TENSACH, string TACGIA, string MSNHAXB, string MALOAISACH, string NAMXB, string LANXB, int SOLUONG, string NOIDUNGTOMLUOC) {
                QUYENSACHRow rowQUYENSACHRow = ((QUYENSACHRow)(this.NewRow()));
                rowQUYENSACHRow.ItemArray = new object[] {
                        MSSACH,
                        TENSACH,
                        TACGIA,
                        MSNHAXB,
                        MALOAISACH,
                        NAMXB,
                        LANXB,
                        SOLUONG,
                        NOIDUNGTOMLUOC};
                this.Rows.Add(rowQUYENSACHRow);
                return rowQUYENSACHRow;
            }
            
            public QUYENSACHRow FindByMSSACH(string MSSACH) {
                return ((QUYENSACHRow)(this.Rows.Find(new object[] {
                            MSSACH})));
            }
            
            public System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            public override DataTable Clone() {
                QUYENSACHDataTable cln = ((QUYENSACHDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            protected override DataTable CreateInstance() {
                return new QUYENSACHDataTable();
            }
            
            internal void InitVars() {
                this.columnMSSACH = this.Columns["MSSACH"];
                this.columnTENSACH = this.Columns["TENSACH"];
                this.columnTACGIA = this.Columns["TACGIA"];
                this.columnMSNHAXB = this.Columns["MSNHAXB"];
                this.columnMALOAISACH = this.Columns["MALOAISACH"];
                this.columnNAMXB = this.Columns["NAMXB"];
                this.columnLANXB = this.Columns["LANXB"];
                this.columnSOLUONG = this.Columns["SOLUONG"];
                this.columnNOIDUNGTOMLUOC = this.Columns["NOIDUNGTOMLUOC"];
            }
            
            private void InitClass() {
                this.columnMSSACH = new DataColumn("MSSACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSSACH);
                this.columnTENSACH = new DataColumn("TENSACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTENSACH);
                this.columnTACGIA = new DataColumn("TACGIA", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnTACGIA);
                this.columnMSNHAXB = new DataColumn("MSNHAXB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMSNHAXB);
                this.columnMALOAISACH = new DataColumn("MALOAISACH", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnMALOAISACH);
                this.columnNAMXB = new DataColumn("NAMXB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNAMXB);
                this.columnLANXB = new DataColumn("LANXB", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnLANXB);
                this.columnSOLUONG = new DataColumn("SOLUONG", typeof(int), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnSOLUONG);
                this.columnNOIDUNGTOMLUOC = new DataColumn("NOIDUNGTOMLUOC", typeof(string), null, System.Data.MappingType.Element);
                this.Columns.Add(this.columnNOIDUNGTOMLUOC);
                this.Constraints.Add(new UniqueConstraint("dtMuonSachKey4", new DataColumn[] {
                                this.columnMSSACH}, true));
                this.columnMSSACH.AllowDBNull = false;
                this.columnMSSACH.Unique = true;
            }
            
            public QUYENSACHRow NewQUYENSACHRow() {
                return ((QUYENSACHRow)(this.NewRow()));
            }
            
            protected override DataRow NewRowFromBuilder(DataRowBuilder builder) {
                return new QUYENSACHRow(builder);
            }
            
            protected override System.Type GetRowType() {
                return typeof(QUYENSACHRow);
            }
            
            protected override void OnRowChanged(DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.QUYENSACHRowChanged != null)) {
                    this.QUYENSACHRowChanged(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowChanging(DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.QUYENSACHRowChanging != null)) {
                    this.QUYENSACHRowChanging(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleted(DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.QUYENSACHRowDeleted != null)) {
                    this.QUYENSACHRowDeleted(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            protected override void OnRowDeleting(DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.QUYENSACHRowDeleting != null)) {
                    this.QUYENSACHRowDeleting(this, new QUYENSACHRowChangeEvent(((QUYENSACHRow)(e.Row)), e.Action));
                }
            }
            
            public void RemoveQUYENSACHRow(QUYENSACHRow row) {
                this.Rows.Remove(row);
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class QUYENSACHRow : DataRow {
            
            private QUYENSACHDataTable tableQUYENSACH;
            
            internal QUYENSACHRow(DataRowBuilder rb) : 
                    base(rb) {
                this.tableQUYENSACH = ((QUYENSACHDataTable)(this.Table));
            }
            
            public string MSSACH {
                get {
                    return ((string)(this[this.tableQUYENSACH.MSSACHColumn]));
                }
                set {
                    this[this.tableQUYENSACH.MSSACHColumn] = value;
                }
            }
            
            public string TENSACH {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.TENSACHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.TENSACHColumn] = value;
                }
            }
            
            public string TACGIA {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.TACGIAColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.TACGIAColumn] = value;
                }
            }
            
            public string MSNHAXB {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.MSNHAXBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.MSNHAXBColumn] = value;
                }
            }
            
            public string MALOAISACH {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.MALOAISACHColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.MALOAISACHColumn] = value;
                }
            }
            
            public string NAMXB {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.NAMXBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.NAMXBColumn] = value;
                }
            }
            
            public string LANXB {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.LANXBColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.LANXBColumn] = value;
                }
            }
            
            public int SOLUONG {
                get {
                    try {
                        return ((int)(this[this.tableQUYENSACH.SOLUONGColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.SOLUONGColumn] = value;
                }
            }
            
            public string NOIDUNGTOMLUOC {
                get {
                    try {
                        return ((string)(this[this.tableQUYENSACH.NOIDUNGTOMLUOCColumn]));
                    }
                    catch (InvalidCastException e) {
                        throw new StrongTypingException("Cannot get value because it is DBNull.", e);
                    }
                }
                set {
                    this[this.tableQUYENSACH.NOIDUNGTOMLUOCColumn] = value;
                }
            }
            
            public bool IsTENSACHNull() {
                return this.IsNull(this.tableQUYENSACH.TENSACHColumn);
            }
            
            public void SetTENSACHNull() {
                this[this.tableQUYENSACH.TENSACHColumn] = System.Convert.DBNull;
            }
            
            public bool IsTACGIANull() {
                return this.IsNull(this.tableQUYENSACH.TACGIAColumn);
            }
            
            public void SetTACGIANull() {
                this[this.tableQUYENSACH.TACGIAColumn] = System.Convert.DBNull;
            }
            
            public bool IsMSNHAXBNull() {
                return this.IsNull(this.tableQUYENSACH.MSNHAXBColumn);
            }
            
            public void SetMSNHAXBNull() {
                this[this.tableQUYENSACH.MSNHAXBColumn] = System.Convert.DBNull;
            }
            
            public bool IsMALOAISACHNull() {
                return this.IsNull(this.tableQUYENSACH.MALOAISACHColumn);
            }
            
            public void SetMALOAISACHNull() {
                this[this.tableQUYENSACH.MALOAISACHColumn] = System.Convert.DBNull;
            }
            
            public bool IsNAMXBNull() {
                return this.IsNull(this.tableQUYENSACH.NAMXBColumn);
            }
            
            public void SetNAMXBNull() {
                this[this.tableQUYENSACH.NAMXBColumn] = System.Convert.DBNull;
            }
            
            public bool IsLANXBNull() {
                return this.IsNull(this.tableQUYENSACH.LANXBColumn);
            }
            
            public void SetLANXBNull() {
                this[this.tableQUYENSACH.LANXBColumn] = System.Convert.DBNull;
            }
            
            public bool IsSOLUONGNull() {
                return this.IsNull(this.tableQUYENSACH.SOLUONGColumn);
            }
            
            public void SetSOLUONGNull() {
                this[this.tableQUYENSACH.SOLUONGColumn] = System.Convert.DBNull;
            }
            
            public bool IsNOIDUNGTOMLUOCNull() {
                return this.IsNull(this.tableQUYENSACH.NOIDUNGTOMLUOCColumn);
            }
            
            public void SetNOIDUNGTOMLUOCNull() {
                this[this.tableQUYENSACH.NOIDUNGTOMLUOCColumn] = System.Convert.DBNull;
            }
            
            public CHITIETPHIEUMUONRow[] GetCHITIETPHIEUMUONRows() {
                return ((CHITIETPHIEUMUONRow[])(this.GetChildRows(this.Table.ChildRelations["QUYENSACHCHITIETPHIEUMUON"])));
            }
        }
        
        [System.Diagnostics.DebuggerStepThrough()]
        public class QUYENSACHRowChangeEvent : EventArgs {
            
            private QUYENSACHRow eventRow;
            
            private DataRowAction eventAction;
            
            public QUYENSACHRowChangeEvent(QUYENSACHRow row, DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            public QUYENSACHRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            public DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
