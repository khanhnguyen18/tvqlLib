//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EditorsOleDbBinding {
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
    [Serializable()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.ComponentModel.ToolboxItem(true)]
    [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [System.Xml.Serialization.XmlRootAttribute("dsCars")]
    [System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class dsCars : System.Data.DataSet {
        
        private CarsDataTable tableCars;
        
        private System.Data.SchemaSerializationMode _schemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public dsCars() {
            this.BeginInit();
            this.InitClass();
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected dsCars(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
                if ((ds.Tables["Cars"] != null)) {
                    base.Tables.Add(new CarsDataTable(ds.Tables["Cars"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new System.Xml.XmlTextReader(new System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.Browsable(false)]
        [System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]
        public CarsDataTable Cars {
            get {
                return this.tableCars;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.BrowsableAttribute(true)]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [System.ComponentModel.DesignerSerializationVisibilityAttribute(System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public override System.Data.DataSet Clone() {
            dsCars cln = ((dsCars)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override void ReadXmlSerializable(System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                System.Data.DataSet ds = new System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["Cars"] != null)) {
                    base.Tables.Add(new CarsDataTable(ds.Tables["Cars"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        protected override System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            System.IO.MemoryStream stream = new System.IO.MemoryStream();
            this.WriteXmlSchema(new System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return System.Xml.Schema.XmlSchema.Read(new System.Xml.XmlTextReader(stream), null);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        internal void InitVars(bool initTable) {
            this.tableCars = ((CarsDataTable)(base.Tables["Cars"]));
            if ((initTable == true)) {
                if ((this.tableCars != null)) {
                    this.tableCars.InitVars();
                }
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void InitClass() {
            this.DataSetName = "dsCars";
            this.Prefix = "";
            this.Namespace = "http://www.tempuri.org/dsCars.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableCars = new CarsDataTable();
            base.Tables.Add(this.tableCars);
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private bool ShouldSerializeCars() {
            return false;
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private void SchemaChanged(object sender, System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public static System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(System.Xml.Schema.XmlSchemaSet xs) {
            dsCars ds = new dsCars();
            System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
            System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
            xs.Add(ds.GetSchemaSerializable());
            System.Xml.Schema.XmlSchemaAny any = new System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            return type;
        }
        
        public delegate void CarsRowChangeEventHandler(object sender, CarsRowChangeEvent e);
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        [System.Serializable()]
        [System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class CarsDataTable : System.Data.DataTable, System.Collections.IEnumerable {
            
            private System.Data.DataColumn columnCategory;
            
            private System.Data.DataColumn columnCyl;
            
            private System.Data.DataColumn columnDelivery_Date;
            
            private System.Data.DataColumn columnDescription;
            
            private System.Data.DataColumn columnHP;
            
            private System.Data.DataColumn columnHyperlink;
            
            private System.Data.DataColumn columnIcon;
            
            private System.Data.DataColumn columnID;
            
            private System.Data.DataColumn columnIs_In_Stock;
            
            private System.Data.DataColumn columnLiter;
            
            private System.Data.DataColumn columnModel;
            
            private System.Data.DataColumn columnMPG_City;
            
            private System.Data.DataColumn columnMPG_Highway;
            
            private System.Data.DataColumn columnPicture;
            
            private System.Data.DataColumn columnPrice;
            
            private System.Data.DataColumn columnTrademark;
            
            private System.Data.DataColumn columnTransmiss_Automatic;
            
            private System.Data.DataColumn columnTransmiss_Speed_Count;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsDataTable() {
                this.TableName = "Cars";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarsDataTable(System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected CarsDataTable(System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CategoryColumn {
                get {
                    return this.columnCategory;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn CylColumn {
                get {
                    return this.columnCyl;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Delivery_DateColumn {
                get {
                    return this.columnDelivery_Date;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn DescriptionColumn {
                get {
                    return this.columnDescription;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HPColumn {
                get {
                    return this.columnHP;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn HyperlinkColumn {
                get {
                    return this.columnHyperlink;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IconColumn {
                get {
                    return this.columnIcon;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Is_In_StockColumn {
                get {
                    return this.columnIs_In_Stock;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn LiterColumn {
                get {
                    return this.columnLiter;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn ModelColumn {
                get {
                    return this.columnModel;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPG_CityColumn {
                get {
                    return this.columnMPG_City;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn MPG_HighwayColumn {
                get {
                    return this.columnMPG_Highway;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PictureColumn {
                get {
                    return this.columnPicture;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn PriceColumn {
                get {
                    return this.columnPrice;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn TrademarkColumn {
                get {
                    return this.columnTrademark;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transmiss_AutomaticColumn {
                get {
                    return this.columnTransmiss_Automatic;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataColumn Transmiss_Speed_CountColumn {
                get {
                    return this.columnTransmiss_Speed_Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsRow this[int index] {
                get {
                    return ((CarsRow)(this.Rows[index]));
                }
            }
            
            public event CarsRowChangeEventHandler CarsRowChanging;
            
            public event CarsRowChangeEventHandler CarsRowChanged;
            
            public event CarsRowChangeEventHandler CarsRowDeleting;
            
            public event CarsRowChangeEventHandler CarsRowDeleted;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void AddCarsRow(CarsRow row) {
                this.Rows.Add(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsRow AddCarsRow(
                        string Category, 
                        byte Cyl, 
                        System.DateTime Delivery_Date, 
                        string Description, 
                        short HP, 
                        string Hyperlink, 
                        byte[] Icon, 
                        bool Is_In_Stock, 
                        double Liter, 
                        string Model, 
                        byte MPG_City, 
                        byte MPG_Highway, 
                        byte[] Picture, 
                        decimal Price, 
                        string Trademark, 
                        string Transmiss_Automatic, 
                        byte Transmiss_Speed_Count) {
                CarsRow rowCarsRow = ((CarsRow)(this.NewRow()));
                rowCarsRow.ItemArray = new object[] {
                        Category,
                        Cyl,
                        Delivery_Date,
                        Description,
                        HP,
                        Hyperlink,
                        Icon,
                        null,
                        Is_In_Stock,
                        Liter,
                        Model,
                        MPG_City,
                        MPG_Highway,
                        Picture,
                        Price,
                        Trademark,
                        Transmiss_Automatic,
                        Transmiss_Speed_Count};
                this.Rows.Add(rowCarsRow);
                return rowCarsRow;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsRow FindByID(int ID) {
                return ((CarsRow)(this.Rows.Find(new object[] {
                            ID})));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public virtual System.Collections.IEnumerator GetEnumerator() {
                return this.Rows.GetEnumerator();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public override System.Data.DataTable Clone() {
                CarsDataTable cln = ((CarsDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataTable CreateInstance() {
                return new CarsDataTable();
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal void InitVars() {
                this.columnCategory = base.Columns["Category"];
                this.columnCyl = base.Columns["Cyl"];
                this.columnDelivery_Date = base.Columns["Delivery Date"];
                this.columnDescription = base.Columns["Description"];
                this.columnHP = base.Columns["HP"];
                this.columnHyperlink = base.Columns["Hyperlink"];
                this.columnIcon = base.Columns["Icon"];
                this.columnID = base.Columns["ID"];
                this.columnIs_In_Stock = base.Columns["Is In Stock"];
                this.columnLiter = base.Columns["Liter"];
                this.columnModel = base.Columns["Model"];
                this.columnMPG_City = base.Columns["MPG City"];
                this.columnMPG_Highway = base.Columns["MPG Highway"];
                this.columnPicture = base.Columns["Picture"];
                this.columnPrice = base.Columns["Price"];
                this.columnTrademark = base.Columns["Trademark"];
                this.columnTransmiss_Automatic = base.Columns["Transmiss Automatic"];
                this.columnTransmiss_Speed_Count = base.Columns["Transmiss Speed Count"];
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            private void InitClass() {
                this.columnCategory = new System.Data.DataColumn("Category", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCategory);
                this.columnCyl = new System.Data.DataColumn("Cyl", typeof(byte), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnCyl);
                this.columnDelivery_Date = new System.Data.DataColumn("Delivery Date", typeof(System.DateTime), null, System.Data.MappingType.Element);
                this.columnDelivery_Date.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Delivery_Date");
                this.columnDelivery_Date.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Delivery_DateColumn");
                this.columnDelivery_Date.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnDelivery_Date");
                this.columnDelivery_Date.ExtendedProperties.Add("Generator_UserColumnName", "Delivery Date");
                base.Columns.Add(this.columnDelivery_Date);
                this.columnDescription = new System.Data.DataColumn("Description", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnDescription);
                this.columnHP = new System.Data.DataColumn("HP", typeof(short), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHP);
                this.columnHyperlink = new System.Data.DataColumn("Hyperlink", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnHyperlink);
                this.columnIcon = new System.Data.DataColumn("Icon", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnIcon);
                this.columnID = new System.Data.DataColumn("ID", typeof(int), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnIs_In_Stock = new System.Data.DataColumn("Is In Stock", typeof(bool), null, System.Data.MappingType.Element);
                this.columnIs_In_Stock.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Is_In_Stock");
                this.columnIs_In_Stock.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Is_In_StockColumn");
                this.columnIs_In_Stock.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnIs_In_Stock");
                this.columnIs_In_Stock.ExtendedProperties.Add("Generator_UserColumnName", "Is In Stock");
                base.Columns.Add(this.columnIs_In_Stock);
                this.columnLiter = new System.Data.DataColumn("Liter", typeof(double), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnLiter);
                this.columnModel = new System.Data.DataColumn("Model", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnModel);
                this.columnMPG_City = new System.Data.DataColumn("MPG City", typeof(byte), null, System.Data.MappingType.Element);
                this.columnMPG_City.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "MPG_City");
                this.columnMPG_City.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "MPG_CityColumn");
                this.columnMPG_City.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnMPG_City");
                this.columnMPG_City.ExtendedProperties.Add("Generator_UserColumnName", "MPG City");
                base.Columns.Add(this.columnMPG_City);
                this.columnMPG_Highway = new System.Data.DataColumn("MPG Highway", typeof(byte), null, System.Data.MappingType.Element);
                this.columnMPG_Highway.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "MPG_Highway");
                this.columnMPG_Highway.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "MPG_HighwayColumn");
                this.columnMPG_Highway.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnMPG_Highway");
                this.columnMPG_Highway.ExtendedProperties.Add("Generator_UserColumnName", "MPG Highway");
                base.Columns.Add(this.columnMPG_Highway);
                this.columnPicture = new System.Data.DataColumn("Picture", typeof(byte[]), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPicture);
                this.columnPrice = new System.Data.DataColumn("Price", typeof(decimal), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnPrice);
                this.columnTrademark = new System.Data.DataColumn("Trademark", typeof(string), null, System.Data.MappingType.Element);
                base.Columns.Add(this.columnTrademark);
                this.columnTransmiss_Automatic = new System.Data.DataColumn("Transmiss Automatic", typeof(string), null, System.Data.MappingType.Element);
                this.columnTransmiss_Automatic.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Transmiss_Automatic");
                this.columnTransmiss_Automatic.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Transmiss_AutomaticColumn");
                this.columnTransmiss_Automatic.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnTransmiss_Automatic");
                this.columnTransmiss_Automatic.ExtendedProperties.Add("Generator_UserColumnName", "Transmiss Automatic");
                base.Columns.Add(this.columnTransmiss_Automatic);
                this.columnTransmiss_Speed_Count = new System.Data.DataColumn("Transmiss Speed Count", typeof(byte), null, System.Data.MappingType.Element);
                this.columnTransmiss_Speed_Count.ExtendedProperties.Add("Generator_ColumnPropNameInRow", "Transmiss_Speed_Count");
                this.columnTransmiss_Speed_Count.ExtendedProperties.Add("Generator_ColumnPropNameInTable", "Transmiss_Speed_CountColumn");
                this.columnTransmiss_Speed_Count.ExtendedProperties.Add("Generator_ColumnVarNameInTable", "columnTransmiss_Speed_Count");
                this.columnTransmiss_Speed_Count.ExtendedProperties.Add("Generator_UserColumnName", "Transmiss Speed Count");
                base.Columns.Add(this.columnTransmiss_Speed_Count);
                this.Constraints.Add(new System.Data.UniqueConstraint("Constraint1", new System.Data.DataColumn[] {
                                this.columnID}, true));
                this.columnID.AutoIncrement = true;
                this.columnID.AllowDBNull = false;
                this.columnID.Unique = true;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsRow NewCarsRow() {
                return ((CarsRow)(this.NewRow()));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Data.DataRow NewRowFromBuilder(System.Data.DataRowBuilder builder) {
                return new CarsRow(builder);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override System.Type GetRowType() {
                return typeof(CarsRow);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanged(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.CarsRowChanged != null)) {
                    this.CarsRowChanged(this, new CarsRowChangeEvent(((CarsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowChanging(System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.CarsRowChanging != null)) {
                    this.CarsRowChanging(this, new CarsRowChangeEvent(((CarsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleted(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.CarsRowDeleted != null)) {
                    this.CarsRowDeleted(this, new CarsRowChangeEvent(((CarsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            protected override void OnRowDeleting(System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.CarsRowDeleting != null)) {
                    this.CarsRowDeleting(this, new CarsRowChangeEvent(((CarsRow)(e.Row)), e.Action));
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void RemoveCarsRow(CarsRow row) {
                this.Rows.Remove(row);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public static System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(System.Xml.Schema.XmlSchemaSet xs) {
                System.Xml.Schema.XmlSchemaComplexType type = new System.Xml.Schema.XmlSchemaComplexType();
                System.Xml.Schema.XmlSchemaSequence sequence = new System.Xml.Schema.XmlSchemaSequence();
                dsCars ds = new dsCars();
                xs.Add(ds.GetSchemaSerializable());
                System.Xml.Schema.XmlSchemaAny any1 = new System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                System.Xml.Schema.XmlSchemaAny any2 = new System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                System.Xml.Schema.XmlSchemaAttribute attribute1 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                System.Xml.Schema.XmlSchemaAttribute attribute2 = new System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "CarsDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                return type;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public partial class CarsRow : System.Data.DataRow {
            
            private CarsDataTable tableCars;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            internal CarsRow(System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableCars = ((CarsDataTable)(this.Table));
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Category {
                get {
                    try {
                        return ((string)(this[this.tableCars.CategoryColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Category\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.CategoryColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Cyl {
                get {
                    try {
                        return ((byte)(this[this.tableCars.CylColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Cyl\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.CylColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.DateTime Delivery_Date {
                get {
                    try {
                        return ((System.DateTime)(this[this.tableCars.Delivery_DateColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Delivery Date\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.Delivery_DateColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Description {
                get {
                    try {
                        return ((string)(this[this.tableCars.DescriptionColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Description\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.DescriptionColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public short HP {
                get {
                    try {
                        return ((short)(this[this.tableCars.HPColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'HP\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.HPColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Hyperlink {
                get {
                    try {
                        return ((string)(this[this.tableCars.HyperlinkColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Hyperlink\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.HyperlinkColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Icon {
                get {
                    try {
                        return ((byte[])(this[this.tableCars.IconColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Icon\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.IconColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public int ID {
                get {
                    return ((int)(this[this.tableCars.IDColumn]));
                }
                set {
                    this[this.tableCars.IDColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool Is_In_Stock {
                get {
                    try {
                        return ((bool)(this[this.tableCars.Is_In_StockColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Is In Stock\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.Is_In_StockColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public double Liter {
                get {
                    try {
                        return ((double)(this[this.tableCars.LiterColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Liter\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.LiterColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Model {
                get {
                    try {
                        return ((string)(this[this.tableCars.ModelColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Model\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.ModelColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte MPG_City {
                get {
                    try {
                        return ((byte)(this[this.tableCars.MPG_CityColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPG City\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.MPG_CityColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte MPG_Highway {
                get {
                    try {
                        return ((byte)(this[this.tableCars.MPG_HighwayColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'MPG Highway\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.MPG_HighwayColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte[] Picture {
                get {
                    try {
                        return ((byte[])(this[this.tableCars.PictureColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Picture\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.PictureColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public decimal Price {
                get {
                    try {
                        return ((decimal)(this[this.tableCars.PriceColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Price\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.PriceColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Trademark {
                get {
                    try {
                        return ((string)(this[this.tableCars.TrademarkColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Trademark\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.TrademarkColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public string Transmiss_Automatic {
                get {
                    try {
                        return ((string)(this[this.tableCars.Transmiss_AutomaticColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transmiss Automatic\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.Transmiss_AutomaticColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public byte Transmiss_Speed_Count {
                get {
                    try {
                        return ((byte)(this[this.tableCars.Transmiss_Speed_CountColumn]));
                    }
                    catch (System.InvalidCastException e) {
                        throw new System.Data.StrongTypingException("The value for column \'Transmiss Speed Count\' in table \'Cars\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableCars.Transmiss_Speed_CountColumn] = value;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCategoryNull() {
                return this.IsNull(this.tableCars.CategoryColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCategoryNull() {
                this[this.tableCars.CategoryColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsCylNull() {
                return this.IsNull(this.tableCars.CylColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetCylNull() {
                this[this.tableCars.CylColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDelivery_DateNull() {
                return this.IsNull(this.tableCars.Delivery_DateColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDelivery_DateNull() {
                this[this.tableCars.Delivery_DateColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsDescriptionNull() {
                return this.IsNull(this.tableCars.DescriptionColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetDescriptionNull() {
                this[this.tableCars.DescriptionColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHPNull() {
                return this.IsNull(this.tableCars.HPColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHPNull() {
                this[this.tableCars.HPColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsHyperlinkNull() {
                return this.IsNull(this.tableCars.HyperlinkColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetHyperlinkNull() {
                this[this.tableCars.HyperlinkColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIconNull() {
                return this.IsNull(this.tableCars.IconColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIconNull() {
                this[this.tableCars.IconColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsIs_In_StockNull() {
                return this.IsNull(this.tableCars.Is_In_StockColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetIs_In_StockNull() {
                this[this.tableCars.Is_In_StockColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsLiterNull() {
                return this.IsNull(this.tableCars.LiterColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetLiterNull() {
                this[this.tableCars.LiterColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsModelNull() {
                return this.IsNull(this.tableCars.ModelColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetModelNull() {
                this[this.tableCars.ModelColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPG_CityNull() {
                return this.IsNull(this.tableCars.MPG_CityColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPG_CityNull() {
                this[this.tableCars.MPG_CityColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsMPG_HighwayNull() {
                return this.IsNull(this.tableCars.MPG_HighwayColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetMPG_HighwayNull() {
                this[this.tableCars.MPG_HighwayColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPictureNull() {
                return this.IsNull(this.tableCars.PictureColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPictureNull() {
                this[this.tableCars.PictureColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsPriceNull() {
                return this.IsNull(this.tableCars.PriceColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetPriceNull() {
                this[this.tableCars.PriceColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTrademarkNull() {
                return this.IsNull(this.tableCars.TrademarkColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTrademarkNull() {
                this[this.tableCars.TrademarkColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransmiss_AutomaticNull() {
                return this.IsNull(this.tableCars.Transmiss_AutomaticColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransmiss_AutomaticNull() {
                this[this.tableCars.Transmiss_AutomaticColumn] = System.Convert.DBNull;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public bool IsTransmiss_Speed_CountNull() {
                return this.IsNull(this.tableCars.Transmiss_Speed_CountColumn);
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public void SetTransmiss_Speed_CountNull() {
                this[this.tableCars.Transmiss_Speed_CountColumn] = System.Convert.DBNull;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")]
        public class CarsRowChangeEvent : System.EventArgs {
            
            private CarsRow eventRow;
            
            private System.Data.DataRowAction eventAction;
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsRowChangeEvent(CarsRow row, System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public CarsRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [System.Diagnostics.DebuggerNonUserCodeAttribute()]
            public System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}

#pragma warning restore 1591
